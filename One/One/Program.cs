//Даны k перестановок из n элементов, каждая из которых принадлежит к одному из m типов.
//Посчитайте позицию первого элемента, если последовательно применить эти k перестановок, убрав одну из них.

//Формат ввода
//В первой строке входных данных заданы числа n и m (1≤n≤100,1≤m≤100).В следующих 
//m строках записано по n чисел. i-е число описывает позицию, на которую нужно переставить i-й элемент.
//В следующей строке записано число k (1≤k≤5⋅10^4)). В следующей строке записаны 
//k чисел от 1 до m — типы перестановок в начальном наборе.

//Формат вывода
//Для каждой из k перестановок выведите в отдельной строке позицию первого элемента, если последовательно применить все остальные перестановки.

//Ввод                 Вывод         
//3 2                  3
//1 3 2                1
//2 3 1                2
//3
//1 2 1

//Ввод                 Вывод
//2 2                  2
//1 2                  1
//2 1                  2
//3
//1 2 1

//Ввод                 Вывод
//1 1                  1
//1                   
//1                   
//1

using System;
using System.IO;

namespace One
{
    public class Program
    {
        static void Main(string[] args)
        {
            int[] paramNM = Array.ConvertAll(Console.ReadLine().Split(' '), int.Parse); // первая строка состоящая из n (кол-во элементов) и m (кол-во типов) 
            int[][] types = new int[paramNM[1]][]; //paramNM[1] - элемент из массива равный m (кол-во типов)
            for (int i = 0; i< paramNM[1]; i++)
            {
                types[i] = Array.ConvertAll(Console.ReadLine().Split(' '), s => int.Parse(s)); // получение перестановок
            }
            int paramK = int.Parse(Console.ReadLine());
            int[] queueK = Array.ConvertAll(Console.ReadLine().Split(' '), s => int.Parse(s)); // порядок применения перестановок

        }
    }
}
